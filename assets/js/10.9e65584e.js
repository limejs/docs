(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{175:function(t,e,a){"use strict";a.r(e);var r=a(0),s=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"异常处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异常处理","aria-hidden":"true"}},[t._v("#")]),t._v(" 异常处理")]),t._v(" "),a("h2",{attrs:{id:"node-js-全局异常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-全局异常","aria-hidden":"true"}},[t._v("#")]),t._v(" Node.js 全局异常")]),t._v(" "),a("p",[t._v("注意: 在使用其他进程管理器进行启动 LIME 的情况下，是不需要编写全局异常处理函数的。通常那些进程管理器会捕获你的进程异常，并作出相应的处理（例如记录日志尝试重启你的应用），这种场景下，你通常不需要自己来处理全局异常。")]),t._v(" "),a("h2",{attrs:{id:"lime-实例异常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lime-实例异常","aria-hidden":"true"}},[t._v("#")]),t._v(" Lime 实例异常")]),t._v(" "),a("p",[t._v("Lime 的底层是 Koa2，因此对于业务中 "),a("code",[t._v("非逃逸")]),t._v(" 的异常，都可以被框架捕捉到，并提供 onerror 回调给您进行自定义处理。")]),t._v(" "),a("h2",{attrs:{id:"自定义错误页"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义错误页","aria-hidden":"true"}},[t._v("#")]),t._v(" 自定义错误页")]),t._v(" "),a("p",[t._v("TODO")])])}],!1,null,null,null);s.options.__file="error.md";e.default=s.exports}}]);