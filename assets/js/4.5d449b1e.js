(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{169:function(t,e,r){"use strict";r.r(e);var _=r(0),i=Object(_.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),r("p",[t._v("LIME.JS 是一个轻量的基于 "),r("a",{attrs:{href:"https://koa.bootcss.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Koa2"),r("OutboundLink")],1),t._v(" 的 Node.js Web开发框架，它基于经典的 MVC 范式，致力于提供简单易用的 Web 应用开发体验。")]),t._v(" "),r("p",[t._v("LIME 中无论是 "),r("code",[t._v("配置")]),t._v("、"),r("code",[t._v("路由")]),t._v(" 还是"),r("code",[t._v("插件")]),t._v("编写，全部采用 JavaScript 语法。只要你熟悉 Node.js 基本语法并了解 "),r("a",{attrs:{href:"https://koa.bootcss.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Koa"),r("OutboundLink")],1),t._v(" 框架中的基本概念(如中间件)，即可快速上手 LIME.JS 框架。")]),t._v(" "),r("p",[t._v("LIME 是完全开源的，无论是插件还是内核，你都可以轻易查看、编辑、改写、创建这套生态体系内的模块和组件。")]),t._v(" "),r("p",[r("router-link",{attrs:{to:"./start.html"}},[t._v("立刻开始")])],1),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),r("p",[t._v("本指南是对 lime 核心的基础介绍，你可以从内核的角度了解到 lime 提供的一些能力。但在实际项目中，建议你可能更应该选择一个适用于业务场景的项目模板。")]),t._v(" "),r("p",[t._v("LIME内核通过灵活的"),r("router-link",{attrs:{to:"./plugin.html"}},[t._v("插件")]),t._v("机制让你可以应对复杂的Web应用开发，所以我们有提供一些针对特定场景的项目骨架，他们可以让你在特定场景的生产环境下游刃有余。")],1),t._v(" "),r("p",[t._v("了解更多项目样板的内容，请查看 "),r("router-link",{attrs:{to:"./boilerplate.html"}},[t._v("项目样板")]),t._v(" 章节")],1),t._v(" "),t._m(4),t._v(" "),r("ul",[r("li",[t._v("MVC 范式的项目结构约定，路由定义和控制器逻辑的清晰分离")]),t._v(" "),r("li",[t._v("视图支持 "),r("a",{attrs:{href:"https://github.com/tj/consolidate.js/",target:"_blank",rel:"noopener noreferrer"}},[t._v("consolidate"),r("OutboundLink")],1),t._v(" 支持列表中的所有模板引擎 （需要安装官方view插件）")]),t._v(" "),r("li",[t._v("支持 mongodb、redis 等常用存储介质（需安装官方存储插件）")]),t._v(" "),r("li",[t._v("支持自启动 HTTP 服务和站点实例导出两种调用机制")]),t._v(" "),r("li",[t._v("支持灵活的插件机制")]),t._v(" "),r("li",[t._v("支持自定义404、500错误页（TODO）")]),t._v(" "),r("li",[t._v("支持配合 "),r("a",{attrs:{href:"https://github.com/limejs/lime-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("lime-cli"),r("OutboundLink")],1),t._v(" 提供高效的项目工程化能力（如路由、控制器自动创建）")])])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍","aria-hidden":"true"}},[this._v("#")]),this._v(" 介绍")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#特点","aria-hidden":"true"}},[this._v("#")]),this._v(" 特点")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[r("p",[t._v("内核简单、优雅， 易上手")]),t._v(" "),r("p",[t._v("lime.js 可以无缝衔接 Koa 和 npm 的现有生态；在灵活与标准之间，lime 以 "),r("code",[t._v("中庸")]),t._v(" 的态度做出权衡，并不断面向用户体验和未来而演进")])]),t._v(" "),r("li",[r("p",[t._v("经典 MVC 范式，约定大于配置")]),t._v(" "),r("p",[t._v("采用最经典的分层架构、约定大于配置的设计理念")])]),t._v(" "),r("li",[r("p",[t._v("可扩展性强， 功能完备")]),t._v(" "),r("p",[t._v("尽管保持了小而精致的内核，但通过插件机制和社区生态打造的脚手架， lime 完全可以胜任复杂项目的开发")])]),t._v(" "),r("li",[r("p",[t._v("面向未来的架构和工具链")]),t._v(" "),r("p",[t._v("对于服务器端而言，升级运行环境的成本要比客户端小的多。也正因如此，lime.js 会毫不客气的废弃对老版本 Node.js 的支持。lime 会用面向未来的态度随时进化")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"项目模板"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目模板","aria-hidden":"true"}},[this._v("#")]),this._v(" 项目模板")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"功能列表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#功能列表","aria-hidden":"true"}},[this._v("#")]),this._v(" 功能列表")])}],!1,null,null,null);i.options.__file="README.md";e.default=i.exports}}]);