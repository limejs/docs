(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{172:function(v,_,e){"use strict";e.r(_);var s=e(0),o=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置","aria-hidden":"true"}},[v._v("#")]),v._v(" 配置")]),v._v(" "),e("p",[v._v("lime 的配置文件放置在 config 目录下。所谓配置，就是集中修改站点的一些基本属性的地方。")]),v._v(" "),e("p",[v._v("例如 存储层数据库的账户密码、站点启动时监听的端口等")]),v._v(" "),e("h2",{attrs:{id:"环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#环境","aria-hidden":"true"}},[v._v("#")]),v._v(" 环境")]),v._v(" "),e("p",[v._v("config 目录下的配置分为 4 个文件，他们是一种约定，其职责分别如下:")]),v._v(" "),e("ul",[e("li",[v._v("common.js 公共配置，所有环境都用到的配置")]),v._v(" "),e("li",[v._v("dev.js 开发环境配置")]),v._v(" "),e("li",[v._v("test.js 测试环境配置")]),v._v(" "),e("li",[v._v("prod.js 生产环境配置")])]),v._v(" "),e("p",[v._v("通常情况下，业务中一般都是有以上3种环境存在。因此 lime 默认提供了这种约定，倘若你没有这么多环境，那么只需把配置写在 "),e("code",[v._v("common.js")]),v._v(" 中即可。\ncommons.js用于放置3个环境共用的配置")]),v._v(" "),e("p",[v._v("我们把 dev/test/prod 这些配置叫做 "),e("code",[v._v("环境配置")]),v._v("。那么，在应用运行时，我们最终通过 "),e("code",[v._v("app.config")]),v._v(" 拿到的配置对象是经过合并的，其合并原理是:")]),v._v(" "),e("blockquote",[e("p",[v._v("把 "),e("code",[v._v("环境配置对象")]),v._v(" 的内容 合并到 "),e("code",[v._v("公共配置对象")]),v._v(" 上完成的，因此在字段冲突时，会以当前环境的配置文件中的字段值为准。")])]),v._v(" "),e("p",[v._v("比如你在 dev.js 中定义了一个 dbpass 字段值是 "),e("code",[v._v("devpassword")]),v._v("，在 common.js 中定义的字段值是 "),e("code",[v._v("password")]),v._v(" 。 那么 当你在开发环境的应用启动后拿到的 dbpass 字段值便是 "),e("code",[v._v("devpassword")])]),v._v(" "),e("h2",{attrs:{id:"读取配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#读取配置","aria-hidden":"true"}},[v._v("#")]),v._v(" 读取配置")]),v._v(" "),e("p",[v._v("在 lime 中的站点配置初始化之后，会挂在到 Lime 实例的 config 属性上。因此在任何地方你都可以轻易获取到全站的配置信息。例如:")]),v._v(" "),e("ul",[e("li",[v._v("controller中通过 "),e("code",[v._v("this.app.config")]),v._v(" 或 "),e("code",[v._v("this.config")])]),v._v(" "),e("li",[v._v("插件中通过 app.config")]),v._v(" "),e("li",[v._v("插件声明文件 "),e("code",[v._v("plugin/index.js")]),v._v(" 中通过外部传入的 "),e("code",[v._v("config")]),v._v(" 参数也可拿到站点配置")])])])}],!1,null,null,null);o.options.__file="config.md";_.default=o.exports}}]);